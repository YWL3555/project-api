# Generated by Django 2.2.7 on 2020-03-01 23:10

from decimal import Decimal
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=False)),
                ('is_tourGuide', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=70)),
                ('city', models.CharField(max_length=30)),
                ('category', models.CharField(max_length=30)),
                ('duration', models.IntegerField()),
                ('size', models.IntegerField()),
                ('languages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=20), size=None)),
                ('description', models.TextField(max_length=4000)),
                ('photo', models.ImageField(upload_to='photos')),
                ('averageRating', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=3)),
                ('totalRating', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('gender', models.CharField(max_length=8)),
                ('contactNumber', models.CharField(max_length=15)),
                ('profilePic', models.ImageField(upload_to='photos')),
            ],
        ),
        migrations.CreateModel(
            name='TourGuide',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField(max_length=500)),
                ('email', models.EmailField(max_length=254)),
                ('gender', models.CharField(max_length=8)),
                ('contactNumber', models.CharField(max_length=15)),
                ('profilePic', models.ImageField(upload_to='photos')),
                ('languages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=20), size=None)),
                ('tourGuideType', models.CharField(max_length=10)),
                ('averageRating', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=3)),
                ('totalRating', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TripDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('availablePax', models.IntegerField()),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Trip')),
            ],
        ),
        migrations.AddField(
            model_name='trip',
            name='TourGuide',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TourGuide'),
        ),
        migrations.CreateModel(
            name='RatingReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('review', models.TextField()),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Trip')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student')),
                ('tourGuide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TourGuide')),
            ],
        ),
        migrations.CreateModel(
            name='PrivateBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('details', models.TextField()),
                ('city', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=20)),
                ('pax', models.IntegerField()),
                ('reviewed', models.BooleanField(default=False)),
                ('cancelled', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student')),
                ('tourGuide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TourGuide')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pax', models.IntegerField()),
                ('reviewed', models.BooleanField(default=False)),
                ('cancelled', models.BooleanField(default=False)),
                ('tripDate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TripDate')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student')),
            ],
        ),
    ]
